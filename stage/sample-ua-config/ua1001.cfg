# VOCAL SIP User Agent (ua) all-in-one Configuration File


# Lines start with '#' are comments

# Configuration line format:
#
#   <tag>		<type>		<value>
#
# Tags and values are case sensitive.
# Currently, types are not checked.


# GENERAL
# Device_Name - Specify the device to use.
#               If you are using a Quicknet card use /dev/phone0.
#               If you are using a sound card use /dev/dsp.
#
# User_Name - Specify the phone number or extention for this
#             User Agent.
#
# Display_Name - Specify a display name for this User Agent.
#
# Pass_Word - If you are using a proxy server, specify the
#             password that will be used for authentication.
#
Device_Name		string		/dev/dsp
User_Name		string		1001
Display_Name		string		UserAgent-2
Pass_Word		string		test


# SIP PORT & TRANSPORT
# Local_SIP_Port - Specify the listening port number of the SIP stack.
#
# SIP_Transport - Specify the transport protocol - UDP or TCP.
#
Local_SIP_Port		string		5001
SIP_Transport		string		UDP


# PROXY SERVER
# Proxy_Server - Specify the IP address and port number of the SIP Proxy
#                Server.
#                If you do not have a Proxy Server, comment out the line.
#                Usage: Proxy_Server    string    <host>[:<port>]
#
Proxy_Server		string		YOUR_HOSTNAME


# TRANSFER & CONFERENCE
# Transfer & Conferencing are NOT SUPPORTED in this release, so
#   it is best to leave these parameters alone.
#
# Ua_XferMode - Use this to turn on transfer or ad-hoc conferencing.
#               The options are: Off/Transfer/Conference
#
# Conference_Server - Specify the URI for the Conference Server. 
#                     The URI consists of the conference bridge number and
#                     the IP address of the proxy server, or the conference
#                     bridge itself (if no proxy is being used).
#
Ua_Xfer_Mode		string  	Off
Conference_Server       string          6000@192.168.5.4


# REGISTRATION
# Use these parameters to enable or disable registration.
#   Enabling the option registers the User Agent with a
#   Registration Server. 
#
# Register_On - To enable (True) or disable(False) registration.
#
# Register_To - Specify the IP address of the Registration Server.
#               Usage: Register_To    string    <host>[:<port>]
#               Note: The Registration Server is often the same
#                     as the Proxy Server.
#
# Register_From - Specify the IP address of the Proxy Server.
#                 Usage: Register_From    strin     <host>[:<port>]
#                 Note: The Registration Server is often the same
#                       as the Proxy Server.
#
# Register_Expire - Specify the time in seconds that the registration
#                   will expire.
#
# Register_Action - Specify either 'proxy' or 'redirect'. This tells
#                   the server to act as a proxy or redirect server
#                   for future requests.  Most servers will use 'proxy'.
#
Register_On		bool		True
Register_From		string		YOUR_HOSTNAME
Register_To		string		YOUR_HOSTNAME
Register_Expires	int		60000
Register_Action		string		proxy


# RINGBACK
# This is used for testing purposes only. It is best to leave it
#   as False.
#
# Provide_Ringback -  Provide (True) or disable (False) the ringback
#                     tone option.
#
Provide_Ringback	bool		False


# RTP
# Network_RTP_Rate - Specify the network RTP packet size in milliseconds.
#
# You can specify a range of RTP port numbers here.  This is
#   useful when passing RTP media through a firewall.  Please
#   specify the Min_RTP_Port as a even number.
#
# Min_RTP_Port - Minimum RTP port
#
# Max_RTP_Port - Maximum RTP port
#
Network_RTP_Rate	int		20
Min_RTP_Port            int     	10100
Max_RTP_Port            int     	10199


# NAT -- Network Address Translation

# If you are behind a NAT firewall, you can configure the SIP UA to
# report the firewall's IP address in the SDP information.  Then, you
# can tunnel the appropriate UDP ports on the NAT firewall to redirect
# UDP to the UA machine's IP address in order to get RTP audio through
# a firewall.

# For this to work, you should also set SIP_Transport to TCP, as this
# will be more successful tunnelling through a NAT firewall.

#NATAddress		string          10.0.0.1


# Logging

# If you specify a file name in LogFilename, the cpLog() messages will
# be sent to that file instead of stderr.

#LogFilename		string		ua.log


# CALL WAITING
# Call waiting is NOT SUPPORTED in this release.  It is best to
#   leave it as False.
#
# Call_Waiting_On - Turn on (True) or turn off (False) the call waiting
#                   feature.
#
Call_Waiting_On         string  	False


# CALL PROGRESS TIMER
# Ua_Timeout - Specify a limit(in seconds) on the amount of time it
#              takes to receive a response (other than 100 Trying)
#              from the farend UAS.
#
Ua_Timeout		string  	10


# SUBSCRIBE/NOTIFY
# This is used for testing purposes only. It is best to leave it
#   as False.
#
# Subscribe_On - Turn on (True) or turn off (False) the sending of
#                SUBSCRIBE messages
#
# Subscribe_Expires - Specify the subscription period in seconds.
#
# Subscribe_To - Specify the IP address of where the SUBSCRIBE messages
#                are going to be sent to.
#
Subscribe_On		string		False
Subscribe_Expires	int		60000
Subscribe_To		string		192.168.22.12


# DIALING TIMERS
# Specify dialing timers in milliseconds.
#
# Initial_Digit_Timeout - Specify a limit(in milliseconds) on the amount
#                         of time it takes to receive the first dialed
#                         digit after the user off hook.
#
# Inter_Digit_Timeout - Specify a limit(in milliseconds) on the amount
#                       of time it takes to receive the subsequent dialed
#                       digits after the first one.
#
Initial_Digit_Timeout	int 		16000
Inter_Digit_Timeout	int		8000


# DIAL PATTERNS
# Note - To make a simple User Agent to User Agent call
#        you do not need to modify the dial patterns.
#
# The dialing patterns use regular expressions.  The second data 
#   field in the dialing pattern is the method for constructing
#   the SIP URL.
#
# For SPEED_DIAL(0) and NORMAL_DIAL(2), the dialed digits will 
#   simply be prefixed to the destination IP address to form the 
#   SIP URL.
#
# Note: the INTERNAL_IP_DIAL is so limited that it is better to
#       use URL dial (enter 'u' from stdin). It is supported by
#       most devices.
# For INTERNAL_IP_DIAL(3), If your User Agents are part of the same
#   internal network, you can use INTERNAL_IP_DIAL. You simply dial
#   the last three digits of the IP address and the SIP URL 
#   is constructed by adding these three digits to the 
#   IP address of the internal network. The dial pattern is 
#   represented by:
#       Dial_Pattern    string    3    ^[*][0-9][0-9][0-9]
# For example, suppose you have two User Agents with IP addresses
#   192.168.5.130 and 192.168.5.135.  Since these User Agents are
#   on the same subnet, you do not dial the full IP address. You
#   can simply dial *130 to call the User Agent at 192.168.5.130.
# See README file for limitations of INTERNAL_IP_DIAL.
#
# For CALL_RETURN(4), whatever string you defined and dialed 
#   will be translated into the last incoming call's URL in 
#   the from field.  This is the same as '*69' functionality
#   in the North America PSTN world.
#
# Dialing types
#   0 - SPEED_DIAL
#   1 - INTERNAL_DIAL
#   2 - NORMAL_DIAL
#   3 - INTERNAL_IP_DIAL (Note: use URL dial instead)
#   4 - CALL_RETURN
#
# Usage: Dial_Pattern string <type> <pattern>
#
Dial_Pattern	string	0	^#[0-9][0-9][0-9]
Dial_Pattern	string	1	[0-9][0-9]*#
Dial_Pattern	string	2	^911
Dial_Pattern	string	2	^611
Dial_Pattern	string	2	^411
Dial_Pattern	string	2	^\*69
Dial_Pattern	string	2	^1[0-9][0-9][0-9]
Dial_Pattern	string	2	^9[2-9][0-9][0-9][0-9][0-9][0-9][0-9]
Dial_Pattern	string	2	^91[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]
# Dial_Pattern	string	3	^[*][0-9][0-9][0-9]


# SPEED DIAL LIST
# The speed dial list is used to setup a list of dial numbers,
#   phone numbers or IP addresses of the parties that you wish
#   to call.
#
# Specify each entry as: Speed_Dial string <digits> <destination>
#   where:
#       <digits> is the number that you intend to dial on your keypad,
#       <destination> is the phone number/IP address of the party you
#                     wish to call.
#
# Example: Suppose you specified the following:
#     Speed_Dial	string	#123	123@192.168.5.5
# To call 123@192.168.5.5, you would simply use the keyboard or
#   phone keypad to dial '#123'.
#
# Note: Speed dial calls will bypass proxy server if an IP address
#       is provided in the destination.
#
Speed_Dial	string	#100	1000


# RSVP CONFIGURATION
# This is used to interface with an RSVP daemon.  This is used
#   for testing purposes only.  It is best to leave it as False.
#
Rsvp_On			bool		False
Provisioning_Host	string		bass
Provisioning_Port	int		6005
Use_Policy_Server	bool		False


# MANUAL CALL ID
# These parameters are provided for testing purposes only. It
# is best to leave it as False.
#
# CallId_On - Turn on (True) or turn off (False) fixing the SIP Call Id
#
# CallId - The fixed call Id
#
CallId_On		bool		False
CallId			string		1234567890


# LOAD GENERATION
# The following parameters are used for load generation.  These
#   parameters do not need to be modified if you want to make
#   User Agent to User Agent calls.
#
# LoadGen_On - Turns load generator on (True) or off (False).
#
# RunMode - Specifies if the UA is in the 'Calling' or the
#           'Receiving' mode.
#
# RSTest - Specify RSTest for redirect server testing.
#
# StartTime - Specify an initial delay (in seconds) before making calls.
#
# CallUrl - Specify the SIP URL to call if the RunMode is set to Calling.
#           Note: Include the proxy server's SIP port number if it is not 5060.
#
# NumKickStarts - Number of parallel "threads" of calls with the
#                 CallDuration and CallDelay below.
#
# NumEndpoints - NOT IMPLEMENTED
#
# CallDuration - Specify the hold time (in msec) for an active call.
#
# CallDelay - Specify the time (in msec) before making a new call.
#
# CallRestartTimer - Guard timer at caller side (in msec)
#                    Should be CallDuration + CallDelay + more
#
# AnswerRestartTimer - Guard timer at callee side (in msec)
#                      Should be < CallRestartTimer
#
# AnswerDelay - NOT IMPLEMENTED
#
# MonitorMsgOn - Turns the statistic messages on (True) or off (False).
#
# MonitorMsgInterval - Specifies the interval (in seconds) to print
#                      statistics messages.
#
# DialNumber - NOT IMPLEMENTED
#
# NumOfCalls - Specify the number of calls before terminating.
#              Set to -1 for infinite calls.
#
# CJTime - Uses Cullen Jennings' version of gettimeofday.
#          NOTE:  You need to set the hardcoded CPU clock time
#                 in CJTime.cxx to get the correct result.
#
# RtpGenOn - Transmit silent audio packets during load generation if
#            it is set to True.
#
LoadGen_On              bool            False
RunMode                 string          Calling
StartTime               int             5000
NumKickStarts           int             1
CallUrl                 string          sip:7399@mendel
NumEndpoints            int             1
CallDuration            int             1000
CallDelay               int             1000
CallRestartTimer        int             17000
AnswerRestartTimer      int             12000
AnswerDelay             int             100
MonitorMsgOn     	bool	        False 
MonitorMsgInterval      int             10
DialNumber              string          6000
NumOfCalls		int		-1
CJTime			bool		False
RtpGenOn                bool            False
